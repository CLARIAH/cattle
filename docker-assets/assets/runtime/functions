#!/bin/bash
set -e
source ${CATTLE_RUNTIME_DIR}/env-defaults

SYSCONF_TEMPLATES_DIR="${CATTLE_RUNTIME_DIR}/configs"

GITLAB_NGINX_CONFIG="/etc/nginx/sites-enabled/gitlab"

## Copies configuration template to the destination as the specified USER
### Looks up for overrides in ${USERCONF_TEMPLATES_DIR} before using the defaults from ${SYSCONF_TEMPLATES_DIR}
# $1: copy-as user
# $2: source file
# $3: destination location
# $4: mode of destination
install_template() {
  local OWNERSHIP=${1}
  local SRC=${2}
  local DEST=${3}
  local MODE=${4:-0644}
  if [[ -f ${SYSCONF_TEMPLATES_DIR}/${SRC} ]]; then
    cp ${SYSCONF_TEMPLATES_DIR}/${SRC} ${DEST}
  elif [[ -f ${SYSCONF_TEMPLATES_DIR}/${SRC} ]]; then
    cp ${SYSCONF_TEMPLATES_DIR}/${SRC} ${DEST}
  fi
  chmod ${MODE} ${DEST}
  chown ${OWNERSHIP} ${DEST}
}

## Replace placeholders with values
# $1: file with placeholders to replace
# $x: placeholders to replace
update_template() {
  local FILE=${1?missing argument}
  shift

  [[ ! -f ${FILE} ]] && return 1

  local VARIABLES=($@)
  local USR=$(stat -c %U ${FILE})
  local tmp_file=$(mktemp)
  cp -a "${FILE}" ${tmp_file}

  local variable
  for variable in ${VARIABLES[@]}; do
    # Keep the compatibilty: {{VAR}} => ${VAR}
    sed -ri "s/[{]{2}$variable[}]{2}/\${$variable}/g" ${tmp_file}
  done

  # Replace placeholders
  (
    export ${VARIABLES[@]}
    local IFS=":"; sudo -HEu ${USR} envsubst "${VARIABLES[*]/#/$}" < ${tmp_file} > ${FILE}
  )
  rm -f ${tmp_file}
}

setup_nginx() {
  install_template root: nginx/cattle /etc/nginx/sites-enabled/cattle
  update_template /etc/nginx/sites-enabled/cattle \
	CATTLE_HOST \
	NGINX_ACCEL_BUFFERING \
	NGINX_HSTS_MAXAGE \
	CATTLE_LOG_DIR \
	NGINX_PROXY_BUFFERING \
	NGINX_X_FORWARDED_PROTO

  rm -f /etc/nginx/sites-enabled/default
  mkdir -p ${CATTLE_LOG_DIR}/nginx
  service nginx restart
}

map_uidgid() {
  echo "Mapping UID/GID"
  ## Adapt uid and gid for ${REDMINE_USER}:${REDMINE_USER}
  USERMAP_ORIG_UID=$(id -u ${CATTLE_USER})
  USERMAP_ORIG_GID=$(id -g ${CATTLE_USER})
  USERMAP_GID=${USERMAP_GID:-${USERMAP_UID:-$USERMAP_ORIG_GID}}
  USERMAP_UID=${USERMAP_UID:-$USERMAP_ORIG_UID}
  if [[ ${USERMAP_UID} != ${USERMAP_ORIG_UID} ]] || [[ ${USERMAP_GID} != ${USERMAP_ORIG_GID} ]]; then
    echo "Adapting uid and gid for ${CATTLE_USER}:${CATTLE_USER} to $USERMAP_UID:$USERMAP_GID"
    groupmod -g ${USERMAP_GID} ${CATTLE_USER}
    sed -i -e "s/:${USERMAP_ORIG_UID}:${USERMAP_GID}:/:${USERMAP_UID}:${USERMAP_GID}:/" /etc/passwd
    # find ${TRIPLY_HOME} -path ${TRIPLY_DATA_DIR}/\* -prune -o -print0 | xargs -0 chown -h ${TRIPLY_USER}:${TRIPLY_USER}
  fi

  # take ownership of directories
  chown -R ${CATTLE_USER}:${CATTLE_USER} ${CATTLE_HOME}
  chown -R ${CATTLE_USER}:${CATTLE_USER} ${CATTLE_LOG_DIR}
}
